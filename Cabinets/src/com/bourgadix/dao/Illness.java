package com.bourgadix.dao;

// Generated 31 mars 2015 00:48:58 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.annotations.Store;

/**
 * Illness generated by hbm2java
 */
@Entity
@Table(name = "illness", catalog = "cabinets")
@Indexed
public class Illness implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7263377708694667647L;
	private Integer idillness;
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	private String illness;
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	private String description;
	


	@IndexedEmbedded
	@ManyToOne
	private Set<Medicament> medicaments=new HashSet<Medicament>(0);

	public Illness() {
	}

	public Illness(String illness) {
		this.illness = illness;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idillness", unique = true, nullable = false)
	public Integer getIdillness() {
		return this.idillness;
	}

	public void setIdillness(Integer idillness) {
		this.idillness = idillness;
	}

	@Column(name = "illness", length = 45)
	public String getIllness() {
		return this.illness;
	}

	public void setIllness(String illness) {
		this.illness = illness;
	}

	@OneToMany(fetch = FetchType.LAZY, targetEntity = Medicament.class, cascade = CascadeType.ALL)
	@JoinTable(name = "illness_medicaments", joinColumns = { @JoinColumn(name = "idillness") }, inverseJoinColumns = { @JoinColumn(name = "idmedicament") })
	public Set<Medicament> getMedicaments() {
		return medicaments;
	}

	public void setMedicaments(Set<Medicament> medicaments) {
		this.medicaments = medicaments;
	}
	@Column(name = "description", length = 65535)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

}
